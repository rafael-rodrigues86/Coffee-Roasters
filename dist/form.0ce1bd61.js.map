{"mappings":"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","sources":["<anon>","src/js/form.js"],"sourcesContent":["var $d2247bac48b6a171$exports = {};\n// Esse codigo sera aplicado à pagina form.html. A principal funcionalidade dele é fazer uma requisição assincrona a uma base de dados que trabalha com CEP. Quando o cliente digitar o CEP e apertar enter, os campos de rua, bairro, cidade, estado e ddd será automaticamente preenchidos.\nclass $d2247bac48b6a171$var$HandleForm {\n    constructor(){\n        this.cepInput = document.getElementById(\"cep\");\n        this.ruaInput = document.getElementById(\"rua\");\n        this.bairroInput = document.getElementById(\"bairro\");\n        this.cidadeInput = document.getElementById(\"cidade\");\n        this.estadoInput = document.getElementById(\"estado\");\n        this.botaoSubmit = document.querySelector(\".botao\");\n        this.telInput = document.querySelector(\"#telefone\");\n        this.isEnter = this.isEnter.bind(this);\n    }\n    setInputs({ bairro: bairro, logradouro: rua, localidade: cidade, uf: estado }) {\n        this.ruaInput.value = rua;\n        this.bairroInput.value = bairro;\n        this.cidadeInput.value = cidade;\n        this.estadoInput.value = estado;\n    }\n    setDDD(ddd) {\n        this.telInput.value = ddd;\n    }\n    async getDDD(cep) {\n        this.responseDDD = await new Promise((resolve, reject)=>{\n            const tempoDeResposta = 100;\n            setTimeout(()=>{\n                if (tempoDeResposta > 100) reject(console.log(\"A requisi\\xe7\\xe3o excedeu o tempo limite\"));\n                else resolve(fetch(`https://viacep.com.br/ws/${cep}/json/`));\n            }, tempoDeResposta);\n        });\n        this.responseDDDJSON = await this.responseDDD.json();\n        this.setDDD(this.responseDDDJSON.ddd);\n    }\n    async getCepInfo(cep) {\n        try {\n            this.cepResponse = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\n            this.cepJSON = await this.cepResponse.json();\n            this.getDDD(cep);\n            this.setInputs(this.cepJSON);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    getCepNumber() {\n        this.cepValue = this.cepInput.value;\n        this.cepNumber = +this.cepValue.replace(\"-\", \"\");\n        this.getCepInfo(this.cepNumber);\n    }\n    isEnter(e) {\n        this.isEnter = e.key === \"Enter\";\n        if (!this.isEnter) return;\n        this.getCepNumber();\n    }\n    init() {\n        this.cepInput.addEventListener(\"keydown\", this.isEnter);\n    }\n}\nconst $d2247bac48b6a171$var$handleForm = new $d2247bac48b6a171$var$HandleForm();\n$d2247bac48b6a171$var$handleForm.init();\n// function Temp() {\n//   return new Promise((resolve, reject) => {\n//     const temp = 10;\n//     setTimeout(() => {\n//       if (temp > 50) {\n//         reject(\"deu ruim\");\n//       } else {\n//         resolve(\"deu bom\");\n//       }\n//     }, 1000);\n//   });\n// }\n// Temp()\n//   .then((result) => console.log(result))\n//   .catch((error) => console.log(error));\nasync function $d2247bac48b6a171$var$iniciarAsync() {\n    const respsota = await new Promise((resolve, reject)=>{\n        const tempoDeResposta = 1000;\n        setTimeout(()=>{\n            if (tempoDeResposta > 1000) reject(\"deu ruim\");\n            else resolve(fetch(`https://viacep.com.br/ws/20560185/json/`));\n        }, tempoDeResposta);\n    // setTimeout(() => resolve(\"resolveu\"), 1000);\n    // reject(\"nao resolveu\");\n    });\n    console.log(respsota);\n}\n$d2247bac48b6a171$var$iniciarAsync(); // const cepInput = document.getElementById(\"cep\");\n // const ruaInput = document.getElementById(\"rua\");\n // const bairroInput = document.getElementById(\"bairro\");\n // const cidadeInput = document.getElementById(\"cidade\");\n // const estadoInput = document.getElementById(\"estado\");\n // const botaoSubmit = document.querySelector(\".botao\");\n // botaoSubmit.addEventListener(\"click\", function (e) {\n //   e.preventDefault();\n // });\n // async function getCepInfo(cep) {\n //   try {\n //     const cepResponse = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\n //     const {\n //       bairro,\n //       logradouro: rua,\n //       localidade: cidade,\n //       uf: estado,\n //     } = await cepResponse.json();\n //     console.log(cepResponse);\n //     console.log(bairro, rua, cidade, estado);\n //     ruaInput.value = rua;\n //     bairroInput.value = bairro;\n //     cidadeInput.value = cidade;\n //     estadoInput.value = estado;\n //   } catch (error) {\n //     console.error(error);\n //   }\n // }\n // console.log(cepInput);\n // cepInput.addEventListener(\"keydown\", function (e) {\n //   const isEnter = e.key === \"Enter\";\n //   if (!isEnter) return;\n //   const cepValue = cepInput.value;\n //   cepNumber = +cepValue.replace(\"-\", \"\");\n //   console.log(cepNumber);\n //   getCepInfo(cepNumber);\n // });\n\n\n//# sourceMappingURL=form.0ce1bd61.js.map\n","// Esse codigo sera aplicado à pagina form.html. A principal funcionalidade dele é fazer uma requisição assincrona a uma base de dados que trabalha com CEP. Quando o cliente digitar o CEP e apertar enter, os campos de rua, bairro, cidade, estado e ddd será automaticamente preenchidos.\n\nclass HandleForm {\n  constructor() {\n    this.cepInput = document.getElementById(\"cep\");\n    this.ruaInput = document.getElementById(\"rua\");\n    this.bairroInput = document.getElementById(\"bairro\");\n    this.cidadeInput = document.getElementById(\"cidade\");\n    this.estadoInput = document.getElementById(\"estado\");\n    this.botaoSubmit = document.querySelector(\".botao\");\n    this.telInput = document.querySelector(\"#telefone\");\n\n    this.isEnter = this.isEnter.bind(this);\n  }\n\n  setInputs({ bairro, logradouro: rua, localidade: cidade, uf: estado }) {\n    this.ruaInput.value = rua;\n    this.bairroInput.value = bairro;\n    this.cidadeInput.value = cidade;\n    this.estadoInput.value = estado;\n  }\n\n  setDDD(ddd) {\n    this.telInput.value = ddd;\n  }\n\n  async getDDD(cep) {\n    this.responseDDD = await new Promise((resolve, reject) => {\n      const tempoDeResposta = 100;\n      setTimeout(() => {\n        if (tempoDeResposta > 100) {\n          reject(console.log(\"A requisição excedeu o tempo limite\"));\n        } else {\n          resolve(fetch(`https://viacep.com.br/ws/${cep}/json/`));\n        }\n      }, tempoDeResposta);\n    });\n    this.responseDDDJSON = await this.responseDDD.json();\n    this.setDDD(this.responseDDDJSON.ddd);\n  }\n\n  async getCepInfo(cep) {\n    try {\n      this.cepResponse = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\n      this.cepJSON = await this.cepResponse.json();\n      this.getDDD(cep);\n      this.setInputs(this.cepJSON);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  getCepNumber() {\n    this.cepValue = this.cepInput.value;\n    this.cepNumber = +this.cepValue.replace(\"-\", \"\");\n    this.getCepInfo(this.cepNumber);\n  }\n\n  isEnter(e) {\n    this.isEnter = e.key === \"Enter\";\n    if (!this.isEnter) return;\n    this.getCepNumber();\n  }\n\n  init() {\n    this.cepInput.addEventListener(\"keydown\", this.isEnter);\n  }\n}\n\nconst handleForm = new HandleForm();\nhandleForm.init();\n\n// function Temp() {\n//   return new Promise((resolve, reject) => {\n//     const temp = 10;\n//     setTimeout(() => {\n//       if (temp > 50) {\n//         reject(\"deu ruim\");\n//       } else {\n//         resolve(\"deu bom\");\n//       }\n//     }, 1000);\n//   });\n// }\n\n// Temp()\n//   .then((result) => console.log(result))\n//   .catch((error) => console.log(error));\n\nasync function iniciarAsync() {\n  const respsota = await new Promise((resolve, reject) => {\n    const tempoDeResposta = 1000;\n    setTimeout(() => {\n      if (tempoDeResposta > 1000) {\n        reject(\"deu ruim\");\n      } else {\n        resolve(fetch(`https://viacep.com.br/ws/20560185/json/`));\n      }\n    }, tempoDeResposta);\n    // setTimeout(() => resolve(\"resolveu\"), 1000);\n    // reject(\"nao resolveu\");\n  });\n  console.log(respsota);\n}\niniciarAsync();\n\n// const cepInput = document.getElementById(\"cep\");\n// const ruaInput = document.getElementById(\"rua\");\n// const bairroInput = document.getElementById(\"bairro\");\n// const cidadeInput = document.getElementById(\"cidade\");\n// const estadoInput = document.getElementById(\"estado\");\n\n// const botaoSubmit = document.querySelector(\".botao\");\n\n// botaoSubmit.addEventListener(\"click\", function (e) {\n//   e.preventDefault();\n// });\n\n// async function getCepInfo(cep) {\n//   try {\n//     const cepResponse = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\n//     const {\n//       bairro,\n//       logradouro: rua,\n//       localidade: cidade,\n//       uf: estado,\n//     } = await cepResponse.json();\n\n//     console.log(cepResponse);\n//     console.log(bairro, rua, cidade, estado);\n//     ruaInput.value = rua;\n//     bairroInput.value = bairro;\n//     cidadeInput.value = cidade;\n//     estadoInput.value = estado;\n//   } catch (error) {\n//     console.error(error);\n//   }\n// }\n\n// console.log(cepInput);\n// cepInput.addEventListener(\"keydown\", function (e) {\n//   const isEnter = e.key === \"Enter\";\n//   if (!isEnter) return;\n//   const cepValue = cepInput.value;\n//   cepNumber = +cepValue.replace(\"-\", \"\");\n//   console.log(cepNumber);\n//   getCepInfo(cepNumber);\n// });\n"],"names":["$d2247bac48b6a171$var$handleForm","constructor","cepInput","document","getElementById","ruaInput","bairroInput","cidadeInput","estadoInput","botaoSubmit","querySelector","telInput","isEnter","bind","setInputs","bairro","logradouro","rua","localidade","cidade","uf","estado","value","setDDD","ddd","getDDD","cep","responseDDD","Promise","resolve","reject","setTimeout","fetch","responseDDDJSON","json","getCepInfo","cepResponse","cepJSON","error","console","getCepNumber","cepValue","cepNumber","replace","e","key","init","addEventListener","$d2247bac48b6a171$var$iniciarAsync","respsota","log"],"version":3,"file":"form.0ce1bd61.js.map"}